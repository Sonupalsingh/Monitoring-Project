####2. Add Elasticsearch Repository


sudo rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch




##8.x is latest vertion which is running on 8. something 
##Create a repo file:

[elasticsearch-8.x]
name=Elasticsearch repository for 8.x packages
baseurl=https://artifacts.elastic.co/packages/8.x/yum
enabled=1
autorefresh=1
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch






or 



sudo rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch

cat <<EOF | sudo tee /etc/yum.repos.d/elasticsearch.repo
[elasticsearch]
name=Elasticsearch repository
baseurl=https://artifacts.elastic.co/packages/8.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
EOF




###3. Install Elasticsearch


sudo dnf install elasticsearch-8.2.0  >  elasticsearch.output

##4. Enable and Start Elasticsearch Service

systemctl start elasticsearch
systemctl enable elasticsearch

sudo systemctl enable --now elasticsearch




##Step 6: Configure Elasticsearch

sudo vim /etc/elasticsearch/elasticsearch.yml


network.host: 0.0.0.0        # allow external access
http.port: 9200
cluster.name: my-application
node.name: node-1


##password reset

/usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic


##Elasticsearch 8.x enables security (TLS & authentication) by default.
###After first install, the system prints a password for the elastic superuser (check logs if you missed it):

sudo cat /var/log/elasticsearch/elasticsearch.log | grep "generated password"


###5. Verify Elasticsearch is Running


curl -X GET "localhost:9200/"


##6. Adjust Firewall (Optional)


sudo firewall-cmd --add-port=9200/tcp --permanent
sudo firewall-cmd --reload


########################################
Install Kibana on CentOS 

#########################


##Install Kibana on CentOS 9
##Step 1: Add Kibana from Elastic repo



sudo dnf install -y kibana



##Step 2: Enable and start Kibana


sudo systemctl daemon-reload
sudo systemctl enable kibana
sudo systemctl start kibana



###Step 3: Configure Kibana

sudo vim /etc/kibana/kibana.yml


server.port: 5601
server.host: "0.0.0.0"              # allow access from outside
elasticsearch.hosts: ["https://localhost:9200"]
elasticsearch.username: "kibana_system"
elasticsearch.password: "YOUR_PASSWORD"




###In Elasticsearch 8.x, kibana_system user has a password that is auto-generated at install time.
###Check your Elasticsearch logs for it:

sudo /usr/share/elasticsearch/bin/elasticsearch-reset-password -u kibana_system


##Step 4: Open firewall port

sudo firewall-cmd --add-port=5601/tcp --permanent
sudo firewall-cmd --reload

sudo systemctl stop firewalld 
sudo systemctl disable firewalld 


#############Elasticsearch.yaml#######################



[root@Centos94 elasticsearch]# pwd
/etc/elasticsearch
[root@Centos94 elasticsearch]# cat elasticsearch.yml
# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
#cluster.name: my-application
#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
#node.name: node-1
#
# Add custom attributes to the node:
#
#node.attr.rack: r1
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
path.data: /var/lib/elasticsearch
#
# Path to log files:
#
path.logs: /var/log/elasticsearch
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
#bootstrap.memory_lock: true
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# By default Elasticsearch is only accessible on localhost. Set a different
# address here to expose this node on the network:
#
#network.host: 192.168.0.1
#
# By default Elasticsearch listens for HTTP traffic on the first free port it
# finds starting at 9200. Set a specific HTTP port here:
#
#http.port: 9200
#
# For more information, consult the network module documentation.
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when this node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
#discovery.seed_hosts: ["host1", "host2"]
#
# Bootstrap the cluster using an initial set of master-eligible nodes:
#
#cluster.initial_master_nodes: ["node-1", "node-2"]
#
# For more information, consult the discovery and cluster formation module documentation.
#
# --------------------------------- Readiness ----------------------------------
#
# Enable an unauthenticated TCP readiness endpoint on localhost
#
#readiness.port: 9399
#
# ---------------------------------- Various -----------------------------------
#
# Allow wildcard deletion of indices:
#
#action.destructive_requires_name: false

#----------------------- BEGIN SECURITY AUTO CONFIGURATION -----------------------
#
# The following settings, TLS certificates, and keys have been automatically    
# generated to configure Elasticsearch security features on 02-09-2025 13:19:17
#
# --------------------------------------------------------------------------------

# Enable security features
xpack.security.enabled: true

xpack.security.enrollment.enabled: true

# Enable encryption for HTTP API client connections, such as Kibana, Logstash, and Agents
xpack.security.http.ssl:
  enabled: true
  keystore.path: certs/http.p12

# Enable encryption and mutual authentication between cluster nodes
xpack.security.transport.ssl:
  enabled: true
  verification_mode: certificate
  keystore.path: certs/transport.p12
  truststore.path: certs/transport.p12
# Create a new cluster with the current node only
# Additional nodes can still join the cluster later
cluster.initial_master_nodes: ["Centos94.example.com"]

# Allow HTTP API connections from anywhere
# Connections are encrypted and require user authentication
http.host: 0.0.0.0

# Allow other nodes to join the cluster from anywhere
# Connections are encrypted and mutually authenticated
#transport.host: 0.0.0.0

#----------------------- END SECURITY AUTO CONFIGURATION -------------------------
[root@Centos94 elasticsearch]#




#############rsyslog.conf#######################

[root@Centos91 ~]# cd /etc/rsyslog.d/

01-remote.conf  90-filebeat.conf
[root@Centos91 rsyslog.d]# cat 01-remote.conf
# Template to store logs in /var/log/<HOSTNAME>/<PROGRAM>.log
$template RemoteLogs,"/var/log/%HOSTNAME%/%PROGRAMNAME%.log"

# Apply template to all messages from remote hosts
*.* ?RemoteLogs

# Stop processing if already handled
& ~

[root@Centos91 rsyslog.d]# cat 90-filebeat.conf
*.* @172.16.5.62:514  # UDP
# or
*.* @@172.16.5.62:514 # TCP

[root@Centos91 rsyslog.d]#


############Filebeat.yaml###############################

[root@filebeat filebeat]# cat filebeat.yml
filebeat.inputs:
- type: log
  paths:
    - /var/log/messages    # This satisfies the input requirement but collects nothing
    - /var/log/secure
    - /var/log/kibana/*.log
    - /var/log/httpd/*.log
    - /var/log/*/*.log
monitoring:
  enabled: true
  elasticsearch:
    hosts: ["https://172.16.5.64:9200"]
    username: "elastic"
    password: "elastic"
    ssl.verification_mode: none

setup.kibana:
  host: "http://172.16.5.132:5601"
  ssl.verification_mode: none

output.elasticsearch:
  hosts: ["https://172.16.5.64:9200"]
  username: "elastic"
  password: "elastic"
  ssl.verification_mode: none

logging.level: info
logging.to_files: true
logging.files:
  path: /var/log/filebeat
  name: filebeat.log
  keepfiles: 7
  permissions: 0644

[root@filebeat filebeat]#
[root@filebeat filebeat]# pwd
/etc/filebeat
[root@filebeat filebeat]# cat filebeat.yml
filebeat.inputs:
- type: log
  paths:
    - /var/log/messages    # This satisfies the input requirement but collects nothing
    - /var/log/secure
    - /var/log/kibana/*.log
    - /var/log/httpd/*.log
    - /var/log/*/*.log
monitoring:
  enabled: true
  elasticsearch:
    hosts: ["https://172.16.5.64:9200"]
    username: "elastic"
    password: "elastic"
    ssl.verification_mode: none

setup.kibana:
  host: "http://172.16.5.132:5601"
  ssl.verification_mode: none

output.elasticsearch:
  hosts: ["https://172.16.5.64:9200"]
  username: "elastic"
  password: "elastic"
  ssl.verification_mode: none

logging.level: info
logging.to_files: true
logging.files:
  path: /var/log/filebeat
  name: filebeat.log
  keepfiles: 7
  permissions: 0644

[root@filebeat filebeat]#



##########################kibana.yaml#############################



[root@kibana ~]# cat /etc/kibana/kibana.yml
logging:
  appenders:
    file:
      type: file
      fileName: /var/log/kibana/kibana.log
      layout:
        type: json
  root:
    appenders:
      - default
      - file
pid.file: /run/kibana/kibana.pid

server.host: "0.0.0.0"
elasticsearch.hosts: ["https://172.16.5.64:9200"]
elasticsearch.username: "kibana_system"
elasticsearch.password: "elastic"
elasticsearch.ssl.verificationMode: none
[root@kibana ~]#




#####################metricbeat.yaml########################

[root@elastic bin]# cat /etc/metricbeat/metricbeat.yml
###################### Metricbeat Configuration Example #######################

# This file is an example configuration file highlighting only the most common
# options. The metricbeat.reference.yml file from the same directory contains all the
# supported options with more comments. You can use it as a reference.
#
# You can find the full configuration reference here:
# https://www.elastic.co/guide/en/beats/metricbeat/index.html

# =========================== Modules configuration ============================

metricbeat.config.modules:
  # Glob pattern for configuration loading
  path: ${path.config}/modules.d/*.yml

  # Set to true to enable config reloading
  #reload.enabled: false
  reload.enabled: true

  # Period on which files under path should be checked for changes
  #reload.period: 10s

# ======================= Elasticsearch template setting =======================

setup.template.settings:
  index.number_of_shards: 1
  index.codec: best_compression
  #_source.enabled: false


# ================================== General ===================================

# The name of the shipper that publishes the network data. It can be used to group
# all the transactions sent by a single shipper in the web interface.
#name:

# The tags of the shipper are included in their own field with each
# transaction published.
#tags: ["service-X", "web-tier"]

# Optional fields that you can specify to add additional information to the
# output.
#fields:
#  env: staging

# ================================= Dashboards =================================
# These settings control loading the sample dashboards to the Kibana index. Loading
# the dashboards is disabled by default and can be enabled either by setting the
# options here or by using the `setup` command.
setup.dashboards.enabled: true
  #setup.dashboards.enabled: false

# The URL from where to download the dashboards archive. By default this URL
# has a value which is computed based on the Beat name and version. For released
# versions, this URL points to the dashboard archive on the artifacts.elastic.co
# website.
#setup.dashboards.url:

# =================================== Kibana ===================================

# Starting with Beats version 6.0.0, the dashboards are loaded via the Kibana API.
# This requires a Kibana endpoint configuration.
setup.kibana:

  # Kibana Host
  # Scheme and port can be left out and will be set to the default (http and 5601)
  # In case you specify and additional path, the scheme is required: http://localhost:5601/path
  # IPv6 addresses should always be defined as: https://[2001:db8::1]:5601
  #host: "localhost:5601"
  host: "http://192.168.1.65:5601"

  # Kibana Space ID
  # ID of the Kibana Space into which the dashboards should be loaded. By default,
  # the Default Space will be used.
  #space.id:

# =============================== Elastic Cloud ================================

# These settings simplify using Metricbeat with the Elastic Cloud (https://cloud.elastic.co/).

# The cloud.id setting overwrites the `output.elasticsearch.hosts` and
# `setup.kibana.host` options.
# You can find the `cloud.id` in the Elastic Cloud web UI.
#cloud.id:

# The cloud.auth setting overwrites the `output.elasticsearch.username` and
# `output.elasticsearch.password` settings. The format is `<user>:<pass>`.
#cloud.auth:

# ================================== Outputs ===================================

# Configure what output to use when sending the data collected by the beat.

# ---------------------------- Elasticsearch Output ----------------------------
output.elasticsearch:
  # Array of hosts to connect to.
  #hosts: ["localhost:9200"]
  hosts: ["https://192.168.1.63:9200"]
  protocol: "https"
  ssl.verification_mode: "none"
  # Protocol - either `http` (default) or `https`.
  #protocol: "https"

  # Authentication credentials - either API key or username/password.
  #api_key: "id:api_key"
  username: "elastic"
  password: "elastic"

# ------------------------------ Logstash Output -------------------------------
#output.logstash:
  # The Logstash hosts
  #hosts: ["localhost:5044"]

  # Optional SSL. By default is off.
  # List of root certificates for HTTPS server verifications
  #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]

  # Certificate for SSL client authentication
  #ssl.certificate: "/etc/pki/client/cert.pem"

  # Client Certificate Key
  #ssl.key: "/etc/pki/client/cert.key"

# ================================= Processors =================================

# Configure processors to enhance or manipulate events generated by the beat.

processors:
  - add_host_metadata: ~
  - add_cloud_metadata: ~
  - add_docker_metadata: ~
  - add_kubernetes_metadata: ~


# ================================== Logging ===================================

# Sets log level. The default log level is info.
# Available log levels are: error, warning, info, debug
#logging.level: debug

# At debug level, you can selectively enable logging only for some components.
# To enable all selectors use ["*"]. Examples of other selectors are "beat",
# "publisher", "service".
#logging.selectors: ["*"]

# ============================= X-Pack Monitoring ==============================
# Metricbeat can export internal metrics to a central Elasticsearch monitoring
# cluster.  This requires xpack monitoring to be enabled in Elasticsearch.  The
# reporting is disabled by default.

# Set to true to enable the monitoring reporter.
#monitoring.enabled: false

# Sets the UUID of the Elasticsearch cluster under which monitoring data for this
# Metricbeat instance will appear in the Stack Monitoring UI. If output.elasticsearch
# is enabled, the UUID is derived from the Elasticsearch cluster referenced by output.elasticsearch.
#monitoring.cluster_uuid:

# Uncomment to send the metrics to Elasticsearch. Most settings from the
# Elasticsearch output are accepted here as well.
# Note that the settings should point to your Elasticsearch *monitoring* cluster.
# Any setting that is not set is automatically inherited from the Elasticsearch
# output configuration, so if you have the Elasticsearch output configured such
# that it is pointing to your Elasticsearch monitoring cluster, you can simply
# uncomment the following line.
#monitoring.elasticsearch:

# ============================== Instrumentation ===============================

# Instrumentation support for the metricbeat.
#instrumentation:
    # Set to true to enable instrumentation of metricbeat.
    #enabled: false

    # Environment in which metricbeat is running on (eg: staging, production, etc.)
    #environment: ""

    # APM Server hosts to report instrumentation results to.
    #hosts:
    #  - http://localhost:8200

    # API Key for the APM Server(s).
    # If api_key is set then secret_token will be ignored.
    #api_key:

    # Secret token for the APM Server(s).
    #secret_token:


# ================================= Migration ==================================

# This allows to enable 6.7 migration aliases
#migration.6_to_7.enabled: true




####commands

   28  ./metricbeat test config -c /etc/metricbeat/metricbeat.yml
   29  ./metricbeat test config -c /etc/metricbeat/metricbeat.yml  --path.home  /usr/share/metricbeat  --path.data  /var/lib/metricbeat
   30  ./metricbeat test output -c /etc/metricbeat/metricbeat.yml  --path.home  /usr/share/metricbeat  --path.data  /var/lib/metricbeat
   31  vim /etc/metricbeat/metricbeat.yml
   32  systemctl restart metricbeat.service
   33  ./metricbeat test output -c /etc/metricbeat/metricbeat.yml  --path.home  /usr/share/metricbeat  --path.data  /var/lib/metricbeat
   34  ./metricbeat setup  -c /etc/metricbeat/metricbeat.yml  --path.home  /usr/share/metricbeat  --path.data  /var/lib/metricbeat
   35  cat /etc/metricbeat/metricbeat.yml

